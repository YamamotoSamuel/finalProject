// --------------------
// Definition of variables
$primary: rgb(163, 1, 1);


// ----------------------------------------
// To install Boostrap:
// 1) Run in the client folder: $ npm i bootstrap
// 2) Import bootstrap with the following line
// @import '../node_modules/bootstrap/scss/bootstrap.scss';
// 
// To install Reactstrap:
// 1) Run in the client folder: $ npm i reactstrap
// 2) Go to the official documentation and take some examples: https://reactstrap.github.io/
// import { Button } from 'reactstrap';
// <Button color="danger">Danger!</Button>
// ----------------------------------------


// --------------------
// Style reusable for all components
body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.info {
  margin: 20px;
  padding: 10px 20px;
  border-radius: 10px;
  display: inline-block;
  background-color: #5776e9;
  color: white;
}

.info.info-danger {
  background-color: #e73f3f;
}

// --------------------
// Style for App component
.App {
  text-align: center;

  .App-logo {
    animation: App-logo-spin infinite 10s linear;
    height: 80px;
  }

  .App-header {
    background-color: $primary;
    // padding: 20px;
    color: white;
    height: 9vh;
    display: inline-flex;
    width: 100%;
    justify-content: space-evenly;
    font-size:x-large;

    a {
      color: black;
      padding: 0 5px;
      text-decoration: none;
    }

    a.active {
      font-weight: bold;
    }
  }

  .App-title {
    font-size: 1.5em;
  }

  .App-intro {
    font-size: large;
  }

  @keyframes App-logo-spin {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }
}

// --------------------
// Style for Home component



.Home {
  display: flex;
  justify-content: space-around;
  margin: 0;
  height: 70vh;
  margin-top: 0;
  // padding: 10%;
  padding-top: 5%;
  padding-left: 10%;
  padding-right: 10%;
  padding-bottom: 125px;
  background: url(/images/clock-background.jpeg) no-repeat center center fixed;
  background-size: cover;
  // background-color: red;
  
  p {
    font-size: 1.2em;
  }
  a {
    color: darkblue;
    font-style: italic;
    text-decoration: none;
  }

  .Add-Task{
    width: 325px;
    border: 5px solid rgb(175, 1, 1);
    border-radius: 28px;
    background-color: rgba(128, 128, 128, 0.9);
    height: 500px;
        // ------------------------------------------


  form{
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: larger;
  }
  button{
    width: 100px;
    height: 50px;
    border-radius: 20px;
    display: flex;
    justify-content: center;
    background-color: orange;
    color:black;
  }
  
}
    input{
      height:30px;
      border-radius: 10px;
      width:200px;
      font-size: 20px;
    }
  .generate-task{
    border: 5px solid rgb(175, 1, 1);
    border-radius: 28px;
    width: 375px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    background-color:rgba(128, 128, 128, 0.9);
    height: 500px; 
    // ------------------------------------------
  }
  button{
    width:100px;
    border-radius: 20px;
    height:30px;
    background-color: orange;
    color:black;
    font-weight: bold;
  }
  
  .community-tasks{
    border: 5px solid rgb(175, 1, 1);
    border-radius: 28px;
    width:350px;
    background-color: rgba(128, 128, 128, 0.9);
    height: 500px; 
}
}

  .Private-Tasks{
    border: solid 5px;
    border-radius: 20px;
    border-color: rgb(175, 1, 1);
    width: 30vw;
    display: inline-flex;
    justify-content: center;
    padding: 1%;
    flex-direction: column;
    background-color: rgba(128,128,128,.8);

    button{
    width:100px;
    border-radius: 20px;
    height:20px;
    background-color: orange;
    color:black;
    font-weight: bold;
    }
  }

  span{
    font-size:large;
  }



  li{
    list-style-type: none;
  }

  // a.active{
  //   margin-top: 28px;
  // }
// --------------------
// Style for Secret component
.Secret {
  .result {
    font-size: 1.2em;
    color: $primary;
  }
}

.Signup form{
  display: inline-flex;
  justify-content: center;
  flex-direction: column;
  width: 300px;
  align-self: center;
}

.Signup button{
  width:100px;
  border-radius: 20px;
  height:30px;
  background-color: orange;
  color:black;
  display: flex;
  justify-content: center;
  align-self: center;
}

.Signup input{
  height:30px;
  border-radius: 10px;
  width:200px;
  font-size: 20px;
  display: flex;
  align-self: center;
}

.Login form{
  display: inline-flex;
  justify-content: center;
  flex-direction: column;
  width: 300px;
  align-self: center;
}

.Login button{
  width:100px;
  border-radius: 20px;
  height:30px;
  background-color: orange;
  color:black;
  display: flex;
  justify-content: center;
  align-self: center;
}

.Login input{
  height:30px;
  border-radius: 10px;
  width:200px;
  font-size: 20px;
  display: flex;
  align-self: center;
}

.Login button{
  font-weight:bold;
}

.Signup button{
  font-weight:bold;
}

.About{
  margin:5em;
  // background: url(/images/whattodo.jpeg) no-repeat center center fixed;
  // background-size: cover;
  img{
    padding-right:10px;
  }
}
.About-text {
  font-size: x-large;
}

// ------------------------------------------------
//CLOCK CSS

.clock{
$black: #1b1e23;
$size: 200px;
$white: #f4eed7;
$feature : #4b9aaa;

body {
  height: 100%;
}
body {
  background: $black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-family: sans-serif;
  color: white;
}

p {
  color: $white;
  font-size: 0.8em;
  opacity: 0.75;
}

.NavClock{
  height:50px;
  width:50px;
}

.clock {
  height: $size;
  width: $size;
  border-radius: #{$size / 2};
  display: flex;
  justify-content: center;
  position: relative;
  &__second,
  &__minute,
  &__hour, &__indicator {
    position: absolute;
    left: calc(50% - 1px);
    width: 2px;
    background: $white;
    transform-origin: bottom center;
    z-index: 2;
    border-radius: 1px;
  }
  &__second {
    height: #{($size / 2) - 10};
    margin-top: 10px;
    background: $feature;
    animation: time 60s infinite steps(60);
    z-index: 3;
  }
  &__minute {
    height: #{($size / 2) - 20};
    margin-top: 20px;
    opacity: 0.75;
    animation: time 3600s linear infinite;
  }
  &__hour {
    height: #{($size / 2) - 40};
    margin-top: 40px;
    animation: time 43200s linear infinite;
  }
  &__indicator {
    height: #{($size / 2) - 2};
    border-top: 2px solid $feature;
    background: none;
  }
  &__indicator:nth-of-type(5n) {
    opacity: 1;
    height: #{($size / 2) - 7};
    border-top: 7px solid $white;
  }
  &__axis {
    background: $feature;
    width: 5px;
    height: 5px;
    border-radius: 3px;
    position: absolute;
    z-index: 4;
    top: #{$size / 2 - 3};
    
  }
}

@for $i from 1 through 60 {
  section:nth-of-type(#{$i}) {
    transform: rotateZ(calc(6deg * #{$i}));
  }
}

@keyframes time {
  to {
    transform: rotateZ(360deg);
  }
}
}